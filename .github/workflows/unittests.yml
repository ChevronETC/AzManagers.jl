# name: UnitTests

# on:
#   push

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
#       - name: Run a one-line script
#         run: pwd
#       - name: Run a multi-line script
#         run: |
#           cd ~
#           pwd
#       - name: Install Julia System
#         run: |
#           sudo wget https://julialang-s3.julialang.org/bin/linux/x64/1.5/julia-1.5.0-linux-x86_64.tar.gz
#           sudo mkdir -p /opt/julia
#           sudo tar --strip-components=1 -xzvf julia-1.5.0-linux-x86_64.tar.gz -C /opt/julia

#           mkdir -p /home/runner/.julia/dev
#           cp -r /home/runner/work/AzManagers.jl/ /home/runner/.julia/dev/AzManagers

#           /opt/julia/bin/julia -e 'using Pkg; pkg"dev /home/runner/.julia/dev/AzManagers"'
#           /opt/julia/bin/julia -e 'using Pkg; pkg"precompile"'
#       - name: Run Julia Unit Tests
#         run: |
#           /opt/julia/bin/julia -e 'using Pkg; pkg"test AzManagers"'

name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
