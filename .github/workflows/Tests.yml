name: Tests
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [1.5] #1.0
        os: [ubuntu-latest] 
    steps:
      - uses: actions/checkout@v1.0.0

      - name: Create an SSH Key Pair
        run: |
          ssh-keygen -f /home/runner/.ssh/azmanagers_rsa -N ''

      - uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Create Resource Group, Shared Image Gallery and Image Definition
      #   run: |
      #     az group create -l southcentralus -n "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}"
      #     az group wait --created --resource-group "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}"
      #     az sig create -g "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" -r "sig${{ github.run_id }}${{ matrix.julia-version }}"
      #     az sig image-definition create -g "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" --gallery-name "sig${{ github.run_id }}${{ matrix.julia-version }}" --gallery-image-definition "unit-test-image" --publisher "canonical" --offer "0001-com-ubuntu-server-focal" --sku "20_04-lts" --os-type linux
      # #     az vm create -n "cmdln-vm4" -g ubuntu-latest-1.5-329937369 --image unit-test-image --public-ip-address "cmdln-pubip4" --subnet "default" --vnet-name "ubuntu-latest-1.5-329937369-vnet" --ssh-key-values @/home/runner/.ssh/azmanagers_rsa.pub --admin-username cvx

      #   # az vm create -n "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}-vm" -g ubuntu-latest-1.5-329937369 --image unit-test-image --public-ip-address "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}-pubip" --subnet "default" --vnet-name "ubuntu-latest-1.5-329937369-vnet"
      #   # ssh julia -e 'using Pkg;pkg"test AzManagers"'

      #   # also need to redirect stdout to github actions (might be able to do in julia) (mby write stdout to file and scp file and cat in githib actions?)
      #   # back pulic ip changes out of azmanagers

      # - name: Get the current branch name
      #   shell: bash
      #   run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      #   id: myref

      # - name: Template the Packer .j2 file
      #   uses: cuchi/jinja2-action@v1.2.0
      #   with:
      #     template: /home/runner/work/AzManagers.jl/AzManagers.jl/templates/cofii-base.json.j2
      #     output_file: /home/runner/work/AzManagers.jl/AzManagers.jl/templates/cofii-base.json
      #   env:
      #     SUBSCRIPTION_ID: "${{ secrets.SUBSCRIPTION_ID }}"
      #     TENANT_ID: "${{ secrets.TENANT_ID }}" 
      #     CLIENT_ID: "${{ secrets.CLIENT_ID }}"
      #     CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"
      #     RESOURCE_GROUP: "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}"
      #     JULIA_VERSION: "${{ matrix.julia-version }}"
      #     SIG_NAME: "sig${{ github.run_id }}${{ matrix.julia-version }}"
      #     PUBLIC_IP: true
      #     BRANCH_NAME: "${{ steps.myref.outputs.branch }}" #Not the branch, but the SHA
      #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      #     SS_TEMPLATE_JSON: ${{ secrets.SS_TEMPLATE_JSON_3 }}
      #     IMAGE_NAME: "unit-test-image"


      # - name: Template the Packer .j2 file
      #   uses: cuchi/jinja2-action@v1.2.0
      #   with:
      #     template: /home/runner/work/AzManagers.jl/AzManagers.jl/templates/azmanagers-setup.jl.j2
      #     output_file: /home/runner/work/AzManagers.jl/AzManagers.jl/templates/azmanagers-setup.jl
      #   env:
      #     RESOURCE_GROUP: "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}"
      #     SIG_NAME: "sig${{ github.run_id }}${{ matrix.julia-version }}"
      #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      #     SUBSCRIPTION_ID: "${{ secrets.SUBSCRIPTION_ID }}"
      #     TENANT_ID: "${{ secrets.TENANT_ID }}" 
      #     CLIENT_ID: "${{ secrets.CLIENT_ID }}"
      #     CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"


      # - name: Install Packer
      #   run: |
      #     curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      #     sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      #     sudo apt-get update && sudo apt-get install packer

      # - name: Build Packer Image
      #   run: |
      #     packer build -color=false -force -timestamp-ui /home/runner/work/AzManagers.jl/AzManagers.jl/templates/cofii-base.json
        # can remove -force and should make each image name unique
        # will need to make sure we are adding the correct branch of AzManagers to the image we want to test

      # - name: Create VNet, Subnet and Master VM
      #   run: |
      #     az network vnet create -n "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}-vnet" -g "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" --subnet-name "default"
      #     az vm create -n "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}-vm" -g "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" --image unit-test-image --public-ip-address "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}-pubip" --subnet "default" --vnet-name "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}-vnet" --ssh-key-values @/home/runner/.ssh/azmanagers_rsa.pub @/home/runner/work/AzManagers.jl/AzManagers.jl/mcpu_key.pub --admin-username cvx
          
      - name: Create VNet, Subnet and Master VM
        run: |
          az vm create -n "new-vm" -g "ubuntu-latest-1.5-341814559" --image unit-test-image --public-ip-address "new-pubip" --subnet "default" --vnet-name "ubuntu-latest-1.5-341814559-vnet" --ssh-key-values @/c/Users/mcpu/.ssh/id_rsa.pub --admin-username cvx

      - name: Run the unit tests
        run: |
          ipaddress=$(az network public-ip show -g "ubuntu-latest-1.5-341814559" -n "new-pubip" | jq '.ipAddress' | cut -d "\"" -f 2)
          echo "IP: $ipaddress"
          scp -i /home/runner/.ssh/azmanagers_rsa /home/runner/.ssh/azmanagers_rsa.pub cvx@$ipaddress:/home/cvx/.ssh/azmanagers_rsa.pub
          ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/azmanagers_rsa cvx@$ipaddress "julia -e 'using Pkg; pkg\"test AzManagers\"'"

      # - name: Run the unit tests
      #   run: |
      #     ipaddress=$(az network public-ip show -g "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" -n "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}-pubip" | jq '.ipAddress' | cut -d "\"" -f 2)
      #     echo "IP: $ipaddress"
      #     scp -i /home/runner/.ssh/azmanagers_rsa /home/runner/.ssh/azmanagers_rsa.pub cvx@$ipaddress:/home/cvx/.ssh/azmanagers_rsa.pub
      #     ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/azmanagers_rsa cvx@$ipaddress "julia -e 'using Pkg; pkg\"test AzManagers\"'"

        # ssh julia -e 'using Pkg;pkg"test AzManagers"'
        # az vm create -n "cmdln-vm4" -g ubuntu-latest-1.5-329937369 --image unit-test-image --public-ip-address "cmdln-pubip4" --subnet "default" --vnet-name "ubuntu-latest-1.5-329937369-vnet" --ssh-key-values @/home/runner/.ssh/azmanagers_rsa.pub --admin-username cvx
          # scp -i /home/runner/.ssh/azmanagers_rsa /home/runner/.ssh/azmanagers_rsa.pub cvx@$104.214.56.20:/home/cvx/.ssh/azmanagers_rsa.pub
          # ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/azmanagers_rsa cvx@$104.214.56.20 "julia -e 'using Pkg; pkg\"test AzManagers\"'"

      # - uses: julia-actions/setup-julia@latest
      #   with:
      #     version: ${{ matrix.julia-version }}

      # - uses: julia-actions/julia-buildpkg@latest #change lastest to master 

      # - uses: julia-actions/julia-runtest@latest #change lastest to master
      #   env:
      #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      #     JULIA_VERSION: "${{ matrix.julia-version }}"
      #     RESOURCE_GROUP: "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}"
      #     SS_TEMPLATE_JSON: ${{ secrets.SS_TEMPLATE_JSON_3 }}
      #     IMAGE_NAME: "unit-test-image"
      #     IMAGE_GALLERY: "sig${{ github.run_id }}${{ matrix.julia-version }}"

      # - uses: julia-actions/julia-processcoverage@v1

      # - uses: codecov/codecov-action@v1
      #   with:
      #     file: lcov.info

      # - name: Delete CI Resource Group
      #   run: |
      #     az group delete -n "${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" --yes
      #   if: ${{ always() }}
