{
  "builders":
  [
    {
      "subscription_id": "{{ env['SUBSCRIPTION_ID'] }}",
      "tenant_id": "{{ env['TENANT_ID'] }}",
      "client_id": "{{ env['CLIENT_ID'] }}",
      "client_secret": "{{ env['CLIENT_SECRET'] }}",
      "type": "azure-arm",
      "os_type": "Linux",
      "vm_size": "Standard_D8s_v3",
      "image_publisher": "canonical",
      "image_offer": "0001-com-ubuntu-server-focal",
      "image_sku": "20_04-lts",
      "shared_image_gallery_destination": {
        "resource_group": "{{ env['RESOURCE_GROUP'] }}",
        "gallery_name": "{{ env['GALLERY_NAME'] }}",
        "image_name": "{{ env['IMAGE_NAME'] }}",
        "image_version": "1.0.0",
        "replication_regions": ["South Central US"]
      },
      "shared_image_gallery_timeout": "120m",
      "build_resource_group_name": "{{ env['RESOURCE_GROUP'] }}",
      "managed_image_resource_group_name": "{{ env['RESOURCE_GROUP'] }}",
      "managed_image_name": "{{ env['IMAGE_NAME'] }}",
      "managed_image_storage_account_type": "Premium_LRS",
      "virtual_network_name": "{{ env['VNET_NAME'] }}",
      "virtual_network_subnet_name": "{{ env['SUBNET_NAME'] }}",
      "virtual_network_resource_group_name": "{{ env['RESOURCE_GROUP'] }}",
      "private_virtual_network_with_public_ip": true,
      "ssh_username": "cvx"
    }
  ],
  "provisioners":
  [
    {
      "only": ["azure-arm"],
      "type": "shell",
      "inline":
      [
        "echo \"Host *\" > ~/.ssh/config",
        "echo \"    StrictHostKeyChecking    no\" >> ~/.ssh/config",
        "echo \"    LogLevel                 ERROR\" >> ~/.ssh/config",
        "echo \"    UserKnownHostsFile       /dev/null\" >> ~/.ssh/config",
        "echo \"ssl_verify: false\" >> ~/.condarc"
      ]
    },
    {
      "type": "shell",
      "inline":
      [
        "sudo apt-get -y update",
        "sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" upgrade",
        "sudo apt-get -y install build-essential mpich libcurl4-openssl-dev emacs-nox nodejs npm git vim",
        "sudo sed -i '1 i *     soft    nofile  1000000' /etc/security/limits.conf",
        "sudo sed -i '1 i *     hard    nofile  1000000' /etc/security/limits.conf",
        "sudo sed -i '1 i fs.inotify.max_user_watches=65536' /etc/sysctl.conf",
        "sudo mkdir -p /opt/julia",
        "cd /tmp"
      ]
    },
    {
      "type": "shell",
      "inline":
      [
        "sudo wget https://julialang-s3.julialang.org/bin/linux/x64/{{ env['JULIA_VERSION'] }}/julia-{{ env['JULIA_VERSION'] }}.0-linux-x86_64.tar.gz"
      ]
    },
    {
      "type": "file",
      "source": "/home/runner/work/AzManagers.jl/AzManagers.jl/templates/azmanagers-setup.jl",
      "destination": "/home/cvx/azmanagers-setup.jl"
    },
    {
      "type": "shell",
      "inline":
      [
        "echo \"installing Julia\"",
        "mkdir ~/.julia",
        "sudo tar --strip-components=1 -xzvf julia-{{ env['JULIA_VERSION'] }}.0-linux-x86_64.tar.gz -C /opt/julia",
        "sudo rm -f julia-{{ env['JULIA_VERSION'] }}.0-linux-x86_64.tar.gz",
        "cd",
        "sed -i '1 i export PATH=\"${PATH}:/opt/julia/bin\"' .bashrc",
        "sed -i '1 i export JULIA_WORKER_TIMEOUT=\"720\"' .bashrc",
        "export PATH=\"${PATH}:/opt/julia/bin\"",
        "echo \"installing julia packages\"",
        "export JULIA_MPI_BINARY=\"system\"",
        "julia -e 'using Pkg; pkg\"add AzSessions AzManagers#{{ env['COMMIT_SHA'] }} Distributed JSON HTTP Test Random\"'",
        "julia -e 'using Pkg; pkg\"precompile\"'"
      ]
    }
  ]
}
